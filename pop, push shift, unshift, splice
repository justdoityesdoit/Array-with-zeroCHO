<script>
  //배열의 첫번째에 요소 추가하기.
  //add at the first element. via use of unshift
const t = ['a','b','c','d','e'];
undefined
t
(5) ['a', 'b', 'c', 'd', 'e']
t.unshift('w');
6
t
(6) ['w', 'a', 'b', 'c', 'd', 'e']



//배열의 첫번째 요소 제거하기. 
//cut out first element. via use of shift
const target = ['a','b','c','d'];
target.shift();
console.log(target);



//배열의 맨뒤에 요소를 추가 push.
//add element at the last array. by using push.
const t=['a','b','c','d'];
t.push('e');
console.log(t);



//배열의 마지막요소 제거하기
//cut out last element pop
const t= ['3','4','5','6'];
t.pop();
console.log(t);



//eliminate the middle elements of the array. by using splice.
//splice를 사용해서 배열의 중간에 이는 요소 제거하기.

const target = ['3','4','5','6'];
target.splice(1,2); //index 1로부터 2개를 지우겠다는.
console.log(target);  // 3,5이 출력된다.



//splice 에 숫자 하나만 있으면 인덱스 그번째 뒤로는 다지움
const target = ['3','4','5','6'];
target.splice(2); 
console.log(target); //5,6이 지워지고 3,4가 출력된다.  



//splice로, 지우면서 추가도 가능하다.
const target = ['3','4','5','6'];
target.splice(1,2,'p','q'); 
console.log(target); 
//index 1부터 2개가 지워져서 3,6 사이에 피 큐가 추가됨.
//3,피,큐,6 이렇게 출력됨.



//splice 를 사용해서 아무것도 안지우고 추가만 하기
const arr=['a','b','c','d'];
arr.splice(2,0,'q'); // 인덱스 2에서 하나도 안지우고 고앞에 큐를 추가
console.log(arr);
//인덱스 2인 c에서 아무것도 안지워지고 그 앞에 큐가 추가된다.
//a,b,q,c,d 이렇게 출력됨.



//배열에 있는 모든 요소를 반복하는 방법
const target = ['a','b','c','d','e'];
let i = 0;
while (i < target.length) {
  console.log(target[i]);
  i++
}
// 인덱스 0부터 타겟.렝스로 잡은 마지막 숫자보다 작은
// 마지막 인덱스 까지. 즉 맨앞부터 맨뒷 까지 다 출력하라.는 뜻.
// 즉, 인덱스 0부터, 렝스-1 까지 찍는다. 
// 약간 헷갈리지만 결과적으로 절대 어렵지 않은 내용이다.



//배열에서 인덱스값 찾기, 배열에서 그 값 제거하기
const arr=['a','b','c','d','e','f'];
arr.indexOf('c');
arr.splice(2,1);
console.log(arr);
//2번째 인덱스에서 1개만 빼고 출력
//a,b,d,e,f 만 출력하게 된다.



</script>
